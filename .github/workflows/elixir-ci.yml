name: Elixir CI

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]
env:
  MIX_ENV: test
  phoenix-version: 1.7.0

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - elixir: 1.14.5
            otp: 24.3
            phoenix-live-view-version: 0.19.0

          - elixir: 1.14.5
            otp: 24.3
            phoenix-live-view-version: 0.20.0

          - elixir: 1.15.4
            otp: 25.3
            phoenix-live-view-version: 0.19.0

          - elixir: 1.15.4
            otp: 25.3
            phoenix-live-view-version: 0.20.0

          - elixir: 1.16.3
            otp: 26.2
            phoenix-live-view-version: 0.19.0

          - elixir: 1.16.3
            otp: 26.2
            phoenix-live-view-version: 0.20.0

          - elixir: 1.16.3
            otp: 26.2
            phoenix-live-view-version: 1.0.0

          - elixir: 1.17.3
            otp: 27.0
            phoenix-live-view-version: 1.0.0

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: ./.github/actions/setup-elixir
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
          phoenix-live-view-version: ${{ matrix.phoenix-live-view-version }}
          phoenix-version: ${{ env.phoenix-version }}
      - run: mix compile --error-on-warnings
      - run: mix test
      - run: mix format --check-formatted
      - run: mix credo --strict
      - name: Retrieve PLT Cache
        uses: actions/cache@v3
        id: plt-cache
        with:
          path: priv/plts
          key: plts-v.2-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ env.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - run: mix dialyzer
      - name: Run test app tests
        run: |
          cd test_app
          mix deps.get
          mix deps | grep "phoenix "
          mix test
      - name: Check let warning
        run: |
          cd test_app
          mix test --only let_warning 2> /tmp/test.output
          cat /tmp/test.output
          !(cat /tmp/test.output | grep -q "Using variables in HEEx templates are discouraged as they disable change tracking.")
