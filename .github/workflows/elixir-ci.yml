name: Elixir CI

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        elixir: [1.13.4, 1.14.0]
        otp: [24.2, 25.0]
        phoenix_version: [1.6.16, 1.7.0]

    env:
      PHOENIX_VERSION: ${{matrix.phoenix_version}}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: ./.github/actions/setup-elixir
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
          phoenix-version: ${{ matrix.phoenix_version }}
      - run: mix format --check-formatted
      - run: mix test
      - run: mix credo --strict
      - run: mix compile --error-on-warnings
      - name: Retrieve PLT Cache
        uses: actions/cache@v3
        id: plt-cache
        with:
          path: priv/plts
          key: plts-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix_version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            plts-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix_version }}-
            plts-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - run: mix dialyzer --no-check --halt-exit-status
      - name: Run test app tests
        run: |
          cd test_app
          mix deps.get
          mix deps | grep "phoenix "
          mix test
      - name: Check let warning
        run: |
          cd test_app
          mix test --only let_warning 2> /tmp/test.output
          cat /tmp/test.output
          !(cat /tmp/test.output | grep -q "Using variables in HEEx templates are discouraged as they disable change tracking.")
